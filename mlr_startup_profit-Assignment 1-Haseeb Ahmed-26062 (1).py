# -*- coding: utf-8 -*-
"""MLR_Startup_Profit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16k09pSFpMZRrLxZOIL0lO4U1lZgvZPAv

# TASK: Build a ML model to predict startup's profit based on various expenses.
Suppose you are part of the finance team for a growing startup that is looking to expand operations. The management wants to predict future profits based on spending in R&D, Administration, and Marketing. Your task is to create a financial model that helps the startup optimize its spending while maximizing profit. This will help the company make informed investment decisions in different departments.

Import Libraries and Load Dataset
"""

# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

# # Loading the dataset without the 'State' column
# file_path = '/content/50_Startups_ES.csv'  # Adjust this path if needed
# df = pd.read_csv(file_path)

# Load Dataset
from google.colab import files
uploaded = files.upload()

import pandas as pd

df = pd.read_csv('/content/50_Startups_ES.csv')  # Adjust filename if needed

# Displaying the first few rows of the dataset
print("First few rows of the dataset:")
print(df.head())

"""Exploratory Data Analysis (EDA)

"""

# Checking for null values
print("\nNull values in each column:")
print(df.isnull().sum())

# Summary statistics of the dataset
print("\nSummary statistics:")
print(df.describe())

# Pairplot to visualize relationships
sns.pairplot(df)
plt.show()

"""Correlation Heatmap helps identify which features have the strongest relationships with the target variable ("Profit").

"""

# Correlation heatmap
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Matrix Heatmap')
plt.show()

"""Data Preprocessing

We split the data into features (X) and target (y), and then split these into training and testing sets. We do so to evaluate the model on unseen data.

We create and train a multiple linear regression model using the training set and display the coefficients to understand the impact of each feature on "Profit."

We can change Train/Test ratio too. Try 70:30 next
"""

# Splitting the data into features (X) and target (y)
X = df.drop('Profit', axis=1)  # All columns except 'Profit' are features
y = df['Profit']               # 'Profit' is the target variable

# Splitting the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Creating and training the multiple linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Displaying the coefficients
print("Model Coefficients:")
coefficients = pd.DataFrame(model.coef_, X.columns, columns=['Coefficient'])
print(coefficients)

intercept = model.intercept_
print(f"Intercept (β0): {intercept}")

"""coefficients represent the positie or negative relation and the intensity.

The coefficients indicate the expected change in "Profit" for a one-unit change in each feature, assuming other features remain constant.


Also, the intercept is implicitly included in the linear regression model by default.

"""

# Making predictions on the test set
y_pred = model.predict(X_test)

# Evaluating the model
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Absolute Error: {mae}")
print(f"R-squared: {r2}")

"""R-squared of 0.77 means the model explains about 77% of the variance in "Profit"

Higher values indicate a better fit.


"""

# Plotting actual vs. predicted values with enhanced labeling and legend
plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, color='blue', label='Actual Profit')  # Blue dots for actual profit
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--', linewidth=2, label='Predicted Profit (Ideal Line)')  # Red dashed line for predicted profit
plt.xlabel('Actual Profit')
plt.ylabel('Predicted Profit')
plt.title('Actual vs. Predicted Profit')
plt.legend()  # Adds a legend to clarify colors
plt.show()

"""Points should ideally lie close to the red line, indicating accurate predictions.

# Slider
Interact with the sliders to input different values for R&D Spend, Administration, and Marketing Spend. The model will predict the profit based on these inputs.
"""

# Install ipywidgets (if not already installed)
!pip install ipywidgets

# Import ipywidgets for interactive components
from ipywidgets import interact, FloatSlider, HBox, VBox, widgets

# Define a function to make predictions interactively
def predict_profit_interactive(rd_spend, administration, marketing_spend):
    # Create a DataFrame with input values
    input_data = pd.DataFrame({
        'R&D Spend': [rd_spend],
        'Administration': [administration],
        'Marketing Spend': [marketing_spend]
    })

    # Predict the profit using the trained model
    predicted_profit = model.predict(input_data)[0]

    # Display the predicted profit
    print(f"Predicted Profit: ${predicted_profit:.2f}")

# Create interactive sliders for user input
rd_spend_slider = FloatSlider(value=100000, min=0, max=500000, step=1000, description='R&D Spend:')
administration_slider = FloatSlider(value=50000, min=0, max=300000, step=1000, description='Administration:')
marketing_spend_slider = FloatSlider(value=100000, min=0, max=500000, step=1000, description='Marketing Spend:')

# Display the interactive widget
interact(predict_profit_interactive,
         rd_spend=rd_spend_slider,
         administration=administration_slider,
         marketing_spend=marketing_spend_slider);

"""# Questions


1. How can this model help the company decide how much to invest in R&D, Administration, and Marketing?

2. What does the mean and standard deviation of R&D Spend suggest about the dataset?

3. The Marketing Spend has a large range (difference between min and max values). How might this impact our model?

4. If the dataset had categorical features like Startup Industry, how would we handle them in this model?

5. What does the correlation matrix tell us about which spending category influences profit the most?

6. Why do we use train_test_split() before fitting the model? What is the default split ratio?

7. What happens if we remove Administration spending from the model? How would it affect predictions?

8. If the test set accuracy is much lower than the training set accuracy, what might be the reason?

9. If a new startup has zero spending in Marketing but high R&D and Administration spending, would this model still make accurate predictions?

10. The company wants to maximize profit. Should they focus more on increasing R&D spending or Marketing spending based on the model’s results?

11. Could this model be used to predict the profit of a startup in a different country? Why or why not?

12. If you were advising this startup, what additional variables would you suggest adding to improve predictions?

"""

# Answers:

# Q1) The model is able to forecast Profit with varying levels of spending in R&D, Administration, and Marketing. From studying the correlation among these factors, the firm is able to spend its budget better in order to achieve the maximum profit.

# Q2) This implies that the R&D Spend is quite disparate, i.e., some of the startups spend heavily on R&D while some spend very little.

# Q3) High variability means a large range. If Marketing Spend significantly affects Profit, this might destabilize predictions.

# Q4) We would transform categorical features into numbers using methods such as one-hot encoding or label encoding so that the model could understand them properly.

# Q5) R&D Spend is most correlated with Profit (0.868), i.e., it has the greatest impact.

# Q6) Partitioning the data into training and test sets assists us in measuring the performance of the model on new data and avoids overfitting. Default ratio is 70%, 30%

# Q7) Because Administration has nearly zero correlation with Profit, its elimination will have minimal effect on predictions.

# Q8) This might be an overfitting sign.

# Q9) Yes, as R&D Spend is the best predictor of Profit.

# Q10) They must concentrate on growing R&D Spend as it is most correlated with Profit

# Q11) Not necessarily. The model is learned from data for a particular market, and economic conditions, competition, and customer behavior differ in different countries.

# Q12) . Industry type
#      . No. of employees